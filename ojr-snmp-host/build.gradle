plugins {
    id 'java'
    id 'application'
}

group = "com.ojr"
version = "0.4.2"

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

repositories {
    mavenCentral()
}

dependencies {
    implementation("com.google.guava:guava:33.3.1-jre")
    implementation("io.opentelemetry:opentelemetry-api:1.45.0")
    implementation("io.opentelemetry:opentelemetry-sdk-common:1.45.0")
    implementation("io.opentelemetry:opentelemetry-sdk:1.45.0")
    implementation("io.opentelemetry:opentelemetry-exporter-common:1.45.0")
    implementation("io.opentelemetry:opentelemetry-exporter-otlp:1.45.0")
    implementation("io.opentelemetry:opentelemetry-exporter-sender-okhttp:1.45.0")
    implementation("io.opentelemetry:opentelemetry-exporter-prometheus:1.45.0-alpha")
    implementation("io.opentelemetry.semconv:opentelemetry-semconv:1.28.0-alpha")
    implementation("io.opentelemetry.semconv:opentelemetry-semconv-incubating:1.28.0-alpha")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.18.2")
    implementation("org.snmp4j:snmp4j-agent:3.8.1")

    implementation(files("libs/ojr-core-0.6.1.jar"))
    implementation(files("libs/ojr-snmp-0.4.0.jar"))
    implementation(files("libs/ojr-host-0.5.2.jar"))

    testImplementation platform('org.junit:junit-bom:5.11.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:4.11.0'
}

application {
    mainClass = 'com.ojr.snmphost.SnmpHostAgent'
}

applicationDistribution.from("config") {
    into "config"
}

applicationDistribution.from("logs") {
    include "PLACE_HOLDER"
    into "logs"
}


applicationDistribution.from("scripts") {
    into "scripts"
}

test {
    useJUnitPlatform()
}
